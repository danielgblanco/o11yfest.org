items:

# - name:
#   role: session
#   title:
#   abstract:
#   images:
#     thumb:
#     social:
#   handles:
#     twitter:
#     linkedin:

- id: christina-yakomin
  name: Christina Yakomin
  bio: |
    Christina is the Senior Technical Lead for Site Reliability Engineering in Vanguard’s Chief Technology Office. She has worked at the company’s Malvern, PA headquarters since graduating from Villanova University with an undergraduate degree in Computer Science. Throughout her career, she has developed an expansive skill set in front- and back-end web development, as well as cloud infrastructure and automation, with a specialization in Site Reliability Engineering. She has earned several Amazon Web Services certifications, including the Solutions Architect - Professional. Christina has also worked closely with the Women’s Initiative for Leadership Success at Vanguard, both internally at the company and externally in the local community, to further the career advancement of women and girls - in particular within the tech industry. In her spare time (and when it is safe to do so!), Christina is passionate about traveling; she has visited over 20 different countries and 25 U.S. states so far!
  role: keynote
  title: "KEYNOTE: Iterative Enterprise SRE Transformation"
  abstract: |
    It’s easy to get discouraged reading books about industry best practices that say things like “always test in prod!” and “10 deploys a day!!” At times, they can make the goal of being a high-functioning DevOps organization feel out-of-reach for large enterprises, where changes to the way we operate take time to roll out. A few years ago, Vanguard started its journey to adopt Site Reliability Engineering across the IT division, and that transformation effort is still underway today. In this talk, we will share where we started, how far we’ve come since then, and all of the steps we’ve taken along the way, as we’ve worked to evangelize changes to the way we measure availability, enable experimentation, leverage highly-available architecture patterns, and learn from failure.

    In this presentation, we’ll focus primarily on the topic of how we monitor and measure availability - developing SLIs and SLOs, managing an error budget, leveraging Honeycomb for observability. We’ll also touch on other aspects of our SRE transformation at a higher level, including home-grown tools for self-service chaos engineering, self-service load testing, emerging cloud platforms (including serverless), proactive failure modes and effects analysis, and blameless post-incident reviews.
  handles:
    twitter: srechristina
    linkedin: christina-yakomin

- id: alex-hidalgo
  name: Alex Hidalgo
  bio: |
    Alex Hidalgo is the Director of Site Reliability Engineer at Nobl9 and author of Implementing Service Level Objectives. During his career he has developed a deep love for sustainable operations, proper observability, and using SLO data to drive discussions and make decisions. Alex’s previous jobs have included IT support, network security, restaurant work, t-shirt design, and hosting game shows at bars.
    When not sharing his passion for technology with others, you can find him scuba diving or watching college basketball. He lives in Brooklyn with his partner Jen and a rescue dog named Taco. Alex has a BA in philosophy from Virginia Commonwealth University.
  role: session
  title: "Service Level Observability: Measuring Internal States with SLOs"
  abstract: |
    Observability and SLOs have aligned goals: to better understand your systems. While the former uses externalized data to understand internal states and the later focuses on the user experience, it turns out these are almost the same thing. Observe better with SLOs and SLO better with observability.

    In 2021 there are few terms that see as much excitement in the tech world as “observability” and “service level objectives.” Unfortunately most of this is the work of marketing departments who don’t really understand either. In this talk I’ll outline what observability actually means starting with the term’s roots in control theory, talk about the origins of reliability engineering going back to the 1940s, and then describe modern and practical approaches for how observability and reliability engineer can be used for complex computer systems via better telemetry and service level objectives.
  handles:
    twitter: ahidalgosre
    linkedin: alex-i-am-not-looking-for-a-job-please-stop-hidalgo-6823971b7

- id: daniel-gomez-blanco
  name: Daniel Gomez Blanco
  bio: |
    I’m a Principal Engineer at Skyscanner currently working on improving our observability to make sure travellers get a reliable and performant experience, and passionate about OpenTelemetry as way to rethink how we instrument our applications based on open standards. Previously, my focus was on performance and resource optimisation, from the browser to our Kubernetes clusters and through our CDN and AWS infrastructure. I joined Skyscanner in 2018, following the acquisition of SKIPJAQ, an automatic ML-based optimisation startup I became a part of when I moved to London. Before moving to London I worked at CERN, in Geneva, building a DB on demand system to automatically provision and manage open-source DB systems.

    I’m passionate about travelling and experiencing new cultures, reason I went travelling around the world for months before moving London, and a possibly a factor of why I like working at Skyscanner. When I want to relax, I don’t think there’s a better way than going into the studio and playing drums for hours.
  role: session
  title: How to transparently migrate 300+ services to OpenTelemetry
  abstract: |
    In this talk, I want to share some details of how tracing is implemented and auto-configured at Skyscanner via common config libraries, and how this allowed us to easily migrate from X-Ray to OpenTracing and Lightstep years ago, and now allowed us to transparently migrate to OpenTelemetry with zero impact on tracing or context propagation, and with minimal developer effort.

    At Skyscanner, we have over 300 services written in Java, Node and Python which were previously exporting spans to Lightstep Satellites and propagating trace context with OT HTTP headers. Migrating to OpenTelemetry presented a few challenges, like minimising our asks from service owners, or making sure that context could still be propagated between services that had migrated and services that hadn’t. Combining the use of OpenTracing shims, multiple trace context propagators, and OpenTelemetry Collectors, we managed to execute this migration giving engineers a minimal friction migration path.

    Migrating to OpenTelemetry paved the way to multiple improvements in our instrumentation libraries, which can now benefit from well-supported auto-instrumentation and future-proof APIs while remaining vendor agnostic.
  handles:
    twitter: DBlancoGomez
    linkedin: danielgblanco86

- id: juraci-paixao-krohling
  name: Juraci Paixão Kröhling
  bio: |
    Juraci Paixão Kröhling is a software engineer at Red Hat working in the Distributed Tracing team. He’s a maintainer on the Jaeger project and contributor to the OpenTelemetry project. He has talked about distributed tracing at conferences like KubeCon, OpenSource Summit, FOSDEM, Devoxx, JavaLand, GIDS, among others.
  role: session
  title: Sampling in Distributed Tracing
  abstract: |
    Sampling is still one of the biggest challenges in distributed tracing. While the basic concept is easy to grasp, the number of choices and their trade-offs requires learning about the techniques and your own workload. In this session, we are giving you all the knowledge required to master the sampling techniques: we’ll talk about head and tail-based sampling, as well as adaptive sampling, and we’ll wrap it up with a bonus discussion on trace aggregation. You’ll leave this session ready to implement scenarios, from the simple “probabilistic head-sampling” up to the complex “scalable tail-based sampling” using open source tools like OpenTelemetry Collector.
  handles:
    twitter: jpkrohling

- id: mike-angstadt
  name: Mike Angstadt
  bio: |
    Mike Angstadt is the Director of Platform Engineering at H-E-B Digital, the largest grocery retailer in the Southwest, with 350 stores and 110,000 partners across Texas & Mexico.

    His passion is for the humans that make all that happen — finding growth opportunities, engaging with them to discover meaningful work, ensuring high-level business objectives are clearly communicated, driving to the predictable delivery of results, and making it fun to discover customer-inspired innovation at H-E-B.
  role: session
  title: Pragmatic Observability While Your Business Grows 300%
  abstract: |
    Wouldn’t it be great if the world stopped for us to implement observability the right way with ubiquitous adoption of the perfect instrumentation? Hate to break it to you, but the reality is that will never happen.

    Engineers ship code, customers use software in unintended ways, teams don’t always buy into everything, and the world will rapidly shift under your well planned roadmaps. So how do you build what you need while remaining agile to pivots that will inevitably come down the pipe? What does evangelism of new processes or tooling look like when teams are plagued with emergent demands on a daily basis? How do you get internal support for the ideas you know will change the game with an endless expectation backlog for feature delivery?

    I’ll be reviewing our strategy for pragmatic observability at H-E-B Digital, what has worked, what didn’t, and what we’re trying right now while we explosively grow our curbside and home delivery grocery business by billions during this incredibly tumultuous time in our industry and world. You’ll take away tips & tricks for building influence and internal confidence for new approaches to solving reliability problems, hopefully relate to some entertaining stories, but most importantly you might just save yourself from making some of the same mistakes I did when implementing and driving adoption of modern observability patterns in your own organization’s journey.
  handles:
    twitter: mike_angstadt
    linkedin: mikeangstadt
